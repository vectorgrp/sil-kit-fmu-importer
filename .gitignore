## Ignore Visual Studio temporary files, build results, and
## files generated by popular Visual Studio add-ons.

###################
# compiled source #
###################
*.com
*.class
*.dll
*.exe
*.pdb
*.dll.config
*.cache
*.suo
# Include dlls if they’re in the NuGet packages directory
!/packages/*/lib/*.dll
# Include dlls if they're in the CommonReferences directory
!*CommonReferences/*.dll
###############
# Directories #
###############
bin/
obj/
TestResults/
#############
# Resharper #
#############
/_ReSharper.*
*.ReSharper.*
############
# Packages #
############
# it’s better to unpack these files and commit the raw source
# git has its own built in compression methods
*.7z
*.dmg
*.gz
*.iso
*.jar
*.rar
*.tar
*.zip
######################
# Logs and databases #
######################
*.log
*.sqlite
######################
# OS generated files #
######################
.DS_Store?
ehthumbs.db
Icon?
Thumbs.db


# User-specific files

# Build results
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
build/
*/_build/
bld/
[Bb]in/
[Oo]bj/
_obj/

# Visual Studio cache/options directory
.vs/
*.csproj.DotSettings*
*.csproj.user
*/JSON/Schemas/Catalog/*

# Click-Once directory
publish/
_publish

# NuGet Packages
*.nupkg
# The packages folder can be ignored because of Package Restore
**/packages/*
# except build/, which is used as an MSBuild target.
!**/packages/build/
# Uncomment if necessary however generally it will be regenerated when needed
#!**/packages/repositories.config

# Business Intelligence projects
*.rdl.data
*.bim.layout
*.bim_*.settings

# Microsoft Fakes
FakesAssemblies/

# Debug settings
launchSettings.json

# User specific part of publish profiles
*.pubxml.user

# Resharper user settings
*.DotSettings.user

# vscode settings
.vscode/settings.json