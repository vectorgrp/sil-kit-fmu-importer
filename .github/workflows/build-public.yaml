name: Build the SIL Kit FMU Importer (public profile)

# Define the triggers for this workflow
on:
  push:
    # only trigger on branches, not on tags
    branches: '**'

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
    - name: Build & Publish
      run: dotnet build ./FmuImporter/BuildAll/Build.csproj -v:m
    - name: Build Tests
      run: dotnet build ./FmuImporter/BuildAll/BuildTests.csproj -v:m
    - name: Run Tests
      run: dotnet test ./FmuImporter/_build/crossplatform-x64-Release/FmuImporter.Tests.dll


  # Get environment variable for docker image URI and provide it to next build step
  prep-linux:
    runs-on: [ubuntu-22.04]
    outputs:
      image: ${{ steps.set_image.outputs.image }}
    environment: build-action

    steps:
      - id: set_image
        env: 
          DOCKER_IMAGE_URI: ${{ vars.DOCKER_IMAGE_URI }} 
        run: echo "image=${{vars.DOCKER_IMAGE_URI}}" >> "$GITHUB_OUTPUT"


  # Build the project, then remove the built artifacts
  build-linux:
    runs-on: [ubuntu-22.04]
    needs: prep-linux
    container:
      image: ${{ needs.prep-linux.outputs.image }}

    steps:
    # Check out this Git repo
    - uses: actions/checkout@v4
    - uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
    - name: Build & Publish
      run: dotnet build ./FmuImporter/BuildAll/Build.csproj -v:m
    - name: Build Tests
      run: dotnet build ./FmuImporter/BuildAll/BuildTests.csproj -v:m
    - name: Run Tests
      run: dotnet test ./FmuImporter/_build/crossplatform-x64-Release/FmuImporter.Tests.dll
